package org.example.oop.case1_ClassAndObjects.tasks

/*

    –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Book —Å –ø–æ–ª—è–º–∏ title, author –∏ yearPublished. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Library, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥.
    –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–ª–∞—Å—Å–µ Library:

    addBook(book: Book) ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–∏–≥—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É.
    listBooks() ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥.
    findBooksByAuthor(author: String) ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞.

 */
fun main() {
    val book = Book(
        title = "—Ä–∞—Å—Ç–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤ –∑–æ–º–±–∏",
        author = "–º–∞—Ä—Ç—ã—à–∫–∞ —Ö–∞–º—Å—Ç–µ—Ä 1490",
        yearPublished = 1988
    )

    val book2 = Book(
        title = "–†–∞—Å—Ç–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤ —Ö–∞–º—Å—Ç–µ—Ä–æ–≤",
        author = "–¥–∏–º–∞228_—Ö–∞–∫–µ—Ä",
        yearPublished = -960
    )

    val book3 = Book(
        title = "Scratch vs Roblox",
        author = "–õ–µ–≤ –¢–æ–ª—Å—Ç—ã–π",
        yearPublished = 2025
    )

    val book4 = Book(
        title = "–°–û–Æ–ó –ù–ï–†–£–®–ò–ú–´–ô 1‚É£Ô∏è‚É£8‚É£8",
        author = "–õ–µ–≤ –¢–æ–ª—Å—Ç—ã–π",
        yearPublished = 52
    )

    val library = Library()
    library.addBook(book)
    library.addBook(book2)
    library.addBook(book3)
    library.addBook(book4)

//    library.listBooks()
    library.findBookByAuthor("–õ–µ–≤ –¢–æ–ª—Å—Ç—ã–π")
}

class Book(
    val title: String,
    val author: String,
    val yearPublished: Int
)

class Library() {
    val books: MutableList<Book> = mutableListOf()

    fun addBook(book: Book) {
        books.add(book)
    }

    fun listBooks() {
        books.forEach { book_ ->
            println("üí´ –ù–∞–∑–≤–∞–Ω–∏–µ: ${book_.title}")
            println("üé® –ê–≤—Ç–æ—Ä: ${book_.author}")
            println("1‚É£üíÄ‚ò†  –ì–æ–¥: ${book_.yearPublished}")
            println()
        }
    }

    fun findBookByAuthor(author: String) {
        books.forEach { book_ ->
            if (book_.author == author) {
                println("üí´ –ù–∞–∑–≤–∞–Ω–∏–µ: ${book_.title}")
                println("üé® –ê–≤—Ç–æ—Ä: ${book_.author}")
                println("1‚É£üíÄ‚ò†  –ì–æ–¥: ${book_.yearPublished}")
                println()
            }
        }
    }
}